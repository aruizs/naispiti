language: cpp
dist: xenial
compiler:
  - gcc
# Unable Clang until Conan.io support version 7.1
#  - clang

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-7
    packages:
      - g++-7
      - clang-7
      - python3
      - python3-pip      
      - python3-venv
      - lcov

install:
  - "[ $CXX = g++ ] && export CXX=g++-7 || true"
# Unable Clang until Conan.io support version 7.1
#  - "[ $CXX = clang++ ] && export CXX=clang++-7 || true"
# Install conan  
  - python3 -m pip install --user virtualenv
  - python3 -m venv conan
  - source conan/bin/activate
  - pip install conan
# Automatic detection of your arch, compiler, etc.
  - conan user

env:
- BUILD_TYPE=Debug
- BUILD_TYPE=Release

before_script:
  # create a build folder for the out-of-source build
  - mkdir build
  # switch to build directory
  - cd build
  # run cmake; here we assume that the project's
  # top-level CMakeLists.txt is located at '..'
  - cmake -DCMAKE_C_FLAGS="--coverage" -DCMAKE_CXX_FLAGS="--coverage" -DCMAKE_EXE_LINKER_FLAGS="--coverage" -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..

script:
  # once CMake has done its job we just build using make as usual
  - make
  # if the project uses ctest we can run the tests like this
  - make test
  - lcov --directory . --capture --output-file coverage.info         # capture coverage info
  - lcov --remove coverage.info '/usr/*' '/home/*/.conan/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info                                        # debug info

